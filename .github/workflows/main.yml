name: Deploy

on: [push]

jobs:
  lint-web:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web

    strategy:
      matrix:
        node-version: [24.x]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install yarn
        run: |
          npm install yarn -g
      
      - name: Install dependencies
        run: |
          yarn
      
      - name: Lint
        run: |
          yarn next lint

  lint-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory:
          ./api

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
          cache: true
      
      - name: Clippy
        run: cargo clippy -- -W warnings

  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory:
          ./api

    needs: [lint-api]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: true

      - name: Build
        run: cargo build --release

      - name: Stop API
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
  
          ssh -i private_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'EOF'
            screen -S api -X stuff "^C"
            sleep 1
          EOF

      - name: Upload binary to remote server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key

          scp -i private_key -o StrictHostKeyChecking=no target/release/api $VPS_USER@$VPS_HOST:/home/mz-prod/api
        
      - name: Start API
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
  
          ssh -i private_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << 'EOF'
            cd /home/mz-prod/api
            chmod +x ./api
  
            screen -S api -X stuff "clear\n"
            screen -S api -X stuff "./api\n"
          EOF
